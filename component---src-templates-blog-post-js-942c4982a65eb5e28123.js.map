{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["props","data","pageContext","previous","next","post","markdownRemark","frontmatter","author","date","description","title","className","excerpt","to","fields","slug","getFormattedCategories","getFormattedTags","map","tag","dangerouslySetInnerHTML","__html","html","rel","query"],"mappings":"4FAAA,sHAQe,mBAAAA,GAAU,IACfC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,YAENC,EAAmBD,EAAnBC,SAAUC,EAASF,EAATE,KAEZC,EAAOJ,EAAKK,eALI,EAMuBD,EAAKE,YAA1CC,EANc,EAMdA,OAAQC,EANM,EAMNA,KAAMC,EANA,EAMAA,YAAaC,EANb,EAMaA,MAEnC,OACE,kBAAC,IAAD,CAAQC,UAAU,sBAChB,kBAAC,IAAD,CAAKD,MAAOA,EAAOD,YAAaA,GAAeL,EAAKQ,UACpD,6BAASD,UAAU,gBACjB,gCACE,4BACE,kBAAC,OAAD,CAAME,GAAIT,EAAKU,OAAOC,MAAOL,IAE/B,uBAAGC,UAAU,2BAA2BH,GACxC,uBAAGG,UAAU,gBAAb,WAAqCJ,GACrC,0BAAMI,UAAU,gCACbK,YAAuBZ,EAAKE,cAE9BW,YAAiBb,EAAKE,aAAaY,KAAI,SAAAC,GAAG,OACzC,0BAAMR,UAAU,yBAAyBQ,OAG7C,6BAASC,wBAAyB,CAAEC,OAAQjB,EAAKkB,SAEnD,yBAAKX,UAAU,iBACb,4BACE,4BACGT,GACC,kBAAC,OAAD,CAAMW,GAAIX,EAASY,OAAOC,KAAMQ,IAAI,QAApC,KACKrB,EAASI,YAAYI,QAI9B,4BACGP,GACC,kBAAC,OAAD,CAAMU,GAAIV,EAAKW,OAAOC,KAAMQ,IAAI,QAC7BpB,EAAKG,YAAYI,MADpB,WAWP,IAAMc,EAAK","file":"component---src-templates-blog-post-js-942c4982a65eb5e28123.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport { getFormattedCategories, getFormattedTags } from 'src/utils/dataUtils';\n\nimport Layout from 'src/components/Layout';\nimport SEO from 'src/components/SEO';\n\nexport default props => {\n  const { data, pageContext } = props;\n\n  const { previous, next } = pageContext;\n\n  const post = data.markdownRemark;\n  const { author, date, description, title } = post.frontmatter;\n\n  return (\n    <Layout className=\"blog-post-template\">\n      <SEO title={title} description={description || post.excerpt} />\n      <article className=\"text-wrapper\">\n        <header>\n          <h1>\n            <Link to={post.fields.slug}>{title}</Link>\n          </h1>\n          <p className=\"post-info-sm color-grey\">{date}</p>\n          <p className=\"post-info-sm\">Author: {author}</p>\n          <span className=\"post-info-sm post-categories\">\n            {getFormattedCategories(post.frontmatter)}\n          </span>\n          {getFormattedTags(post.frontmatter).map(tag => (\n            <span className=\"post-info-sm post-tag\">{tag}</span>\n          ))}\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\n      </article>\n      <nav className=\"nav-prev-next\">\n        <ul>\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      fields {\n        slug\n      }\n      frontmatter {\n        author\n        categories\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        tags\n        title\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}